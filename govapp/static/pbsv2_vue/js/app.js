(function(){var __webpack_modules__={674:function(g){function I(g){var I=new Error("Cannot find module '"+g+"'");throw I.code="MODULE_NOT_FOUND",I}I.keys=function(){return[]},I.resolve=I,I.id=674,g.exports=I},756:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js\nvar runtime_dom_esm_bundler = __webpack_require__(963);\n// EXTERNAL MODULE: ./node_modules/vue-router/dist/vue-router.mjs\nvar vue_router = __webpack_require__(201);\n;// CONCATENATED MODULE: ./src/router/index.js\n//import Vue from 'vue'\n\n//import external_routes from '@/components/external/routes'\n//import internal_routes from '@/components/internal/routes'\n\n//Vue.use(Router)\nvar NotFoundComponent = null\n\n//console.log(process.env.BASE_URL)\nconst router = (0,vue_router/* createRouter */.p7)({\n    //history: createWebHistory(process.env.BASE_URL),\n    history: (0,vue_router/* createWebHistory */.PO)(),\n    //strict: true,\n    routes: [\n        {\n            path: '/:pathMatch(.*)',\n            component: NotFoundComponent\n        },\n\n//        internal_routes,\n    ]\n})\n\n/* harmony default export */ var src_router = (router);\n\n// EXTERNAL MODULE: ./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(252);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/App.vue?vue&type=template&id=7ad674c7\n\n\nconst _hoisted_1 = { id: \"app\" }\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = (0,runtime_core_esm_bundler/* resolveComponent */.up)(\"router-view\")\n\n  return ((0,runtime_core_esm_bundler/* openBlock */.wg)(), (0,runtime_core_esm_bundler/* createElementBlock */.iD)(\"div\", _hoisted_1, [\n    (0,runtime_core_esm_bundler/* createVNode */.Wm)(_component_router_view)\n  ]))\n}\n;// CONCATENATED MODULE: ./src/App.vue?vue&type=template&id=7ad674c7\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/App.vue?vue&type=script&lang=js\n\n/* harmony default export */ var Appvue_type_script_lang_js = ({\n  name: 'app'\n});\n\n\n\n;// CONCATENATED MODULE: ./src/App.vue?vue&type=script&lang=js\n \n;// CONCATENATED MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/App.vue?vue&type=style&index=0&id=7ad674c7&lang=css\n// extracted by mini-css-extract-plugin\n\n;// CONCATENATED MODULE: ./src/App.vue?vue&type=style&index=0&id=7ad674c7&lang=css\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(744);\n;// CONCATENATED MODULE: ./src/App.vue\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.Z)(Appvue_type_script_lang_js, [['render',render]])\n\n/* harmony default export */ var App = (__exports__);\n// EXTERNAL MODULE: ./src/utils/helpers.js\nvar helpers = __webpack_require__(325);\nvar helpers_default = /*#__PURE__*/__webpack_require__.n(helpers);\n// EXTERNAL MODULE: ./node_modules/moment-range/dist/moment-range.js\nvar moment_range = __webpack_require__(542);\n// EXTERNAL MODULE: ./node_modules/@ckeditor/ckeditor5-vue/dist/ckeditor.js\nvar ckeditor = __webpack_require__(0);\nvar ckeditor_default = /*#__PURE__*/__webpack_require__.n(ckeditor);\n// EXTERNAL MODULE: ./node_modules/@dbca/gov-vue3-components/dist/library.mjs\nvar library = __webpack_require__(722);\n// EXTERNAL MODULE: ./node_modules/datatables.net-bs5/js/dataTables.bootstrap5.mjs\nvar dataTables_bootstrap5 = __webpack_require__(700);\n// EXTERNAL MODULE: ./node_modules/datatables.net-buttons-bs5/js/buttons.bootstrap5.mjs\nvar buttons_bootstrap5 = __webpack_require__(635);\n// EXTERNAL MODULE: ./node_modules/datatables.net-responsive-bs5/js/responsive.bootstrap5.mjs + 1 modules\nvar responsive_bootstrap5 = __webpack_require__(156);\n// EXTERNAL MODULE: ./node_modules/datatables.net-buttons/js/dataTables.buttons.js\nvar dataTables_buttons = __webpack_require__(276);\n// EXTERNAL MODULE: ./node_modules/jszip/dist/jszip.min.js\nvar jszip_min = __webpack_require__(733);\nvar jszip_min_default = /*#__PURE__*/__webpack_require__.n(jszip_min);\n// EXTERNAL MODULE: ./node_modules/datatables.net-buttons/js/buttons.html5.js\nvar buttons_html5 = __webpack_require__(253);\n// EXTERNAL MODULE: ./node_modules/select2/dist/js/select2.js\nvar select2 = __webpack_require__(686);\n// EXTERNAL MODULE: ./node_modules/currency.js/dist/currency.min.js\nvar currency_min = __webpack_require__(740);\n// EXTERNAL MODULE: ./node_modules/jquery-validation/dist/jquery.validate.js\nvar jquery_validate = __webpack_require__(587);\n;// CONCATENATED MODULE: ./src/main.js\n/* provided dependency */ var moment = __webpack_require__(381);\n\n\n\n\n\n\n\n\n\n\n\n\nwindow.JSZip = (jszip_min_default());\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(0,moment_range.extendMoment)(moment); // eslint-disable-line no-undef\n\n// Add CSRF Token to every request\nconst customHeaders = new Headers({\n    'X-CSRFToken': helpers_default().getCookie('csrftoken'),\n});\nconst customHeadersJSON = new Headers({\n    'X-CSRFToken': helpers_default().getCookie('csrftoken'),\n    'Content-Type': 'application/json',\n});\n// eslint-disable-next-line no-global-assign\nfetch = ((originalFetch) => {\n    return (...args) => {\n        if (args.length > 1) {\n            if (typeof args[1].body === 'string') {\n                args[1].headers = customHeadersJSON;\n            } else {\n                args[1].headers = customHeaders;\n            }\n        }\n        const result = originalFetch.apply(undefined, args);\n        return result;\n    };\n})(fetch);\n\nconst app = (0,runtime_dom_esm_bundler/* createApp */.ri)(App);\n\napp.config.globalProperties.$filters = {\n    pretty(val, indent = 2) {\n        if (typeof val !== 'object') {\n            try {\n                val = JSON.parse(val);\n            } catch (err) {\n                console.warn('value is not JSON');\n                return val;\n            }\n        }\n        return JSON.stringify(val, null, indent);\n    },\n};\n\napp.use(src_router).use(library/* default */.Z).use((ckeditor_default()));\nsrc_router.isReady().then(() => app.mount('#app'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///756\n")},325:function(module,__unused_webpack_exports,__webpack_require__){eval("/* provided dependency */ var _ = __webpack_require__(486);\n/* provided dependency */ var $ = __webpack_require__(755);\n/* provided dependency */ var swal = __webpack_require__(455);\n/* provided dependency */ var moment = __webpack_require__(381);\nmodule.exports = {\n    // Handle fetch get and post requests by stringifying JSON input and returning a JSON object\n    fetchWrapper: async function (url, method, data) {\n        let parsedMethod = null;\n        if (method) {\n            parsedMethod = method.trim().toUpperCase();\n        }\n        let response = null;\n        if (!url) {\n            throw 'You must specify a url';\n        }\n        if (arguments.length > 1) {\n            if (!['POST', 'GET'].includes(parsedMethod)) {\n                throw 'HTTP method must be GET or POST';\n            }\n            if (parsedMethod === 'POST' && !data) {\n                throw 'POST method requires data argument';\n            }\n        }\n        if (!parsedMethod || parsedMethod === 'GET') {\n            try {\n                const getResponse = await fetch(url);\n                response = await getResponse.json();\n            } catch (error) {\n                console.error(error);\n            }\n        } else if (parsedMethod === 'POST') {\n            try {\n                const postResponse = await fetch(url, {\n                    method: parsedMethod,\n                    body: JSON.stringify(data),\n                });\n                response = await postResponse.json();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        return response;\n    },\n    formatError: function (err) {\n        let returnStr = '';\n        // object {}\n        if (\n            typeof err.body === 'object' &&\n            !Object.prototype.hasOwnProperty.call(err.body, 'length')\n        ) {\n            for (const key of Object.keys(err.body)) {\n                returnStr += `${key}: ${err.body[key]} <br/>`;\n            }\n            // array\n        } else if (typeof err.body === 'object') {\n            returnStr = err.body[0];\n            // string\n        } else {\n            returnStr = err.body;\n        }\n        return returnStr;\n    },\n    apiError: function (resp) {\n        var error_str = '';\n        if (resp.status === 400) {\n            try {\n                let obj = JSON.parse(resp.responseText);\n                error_str = obj.non_field_errors[0].replace(/[[\\]\"]/g, '');\n            } catch (e) {\n                error_str = resp.responseText.replace(/[[\\]\"]/g, '');\n            }\n        } else if (resp.status === 404) {\n            error_str = 'The resource you are looking for does not exist.';\n        } else {\n            error_str = resp.responseText.replace(/[[\\]\"]/g, '');\n        }\n        return error_str;\n    },\n    apiVueResourceError: function (resp) {\n        var error_str = '';\n        var text = null;\n        if (resp.status === 400) {\n            if (Array.isArray(resp.body)) {\n                text = resp.body[0];\n            } else if (typeof resp.body == 'object') {\n                text = resp.body;\n            } else {\n                text = resp.body;\n            }\n\n            if (typeof text == 'object') {\n                if (\n                    Object.prototype.hasOwnProperty.call(\n                        text,\n                        'non_field_errors'\n                    )\n                ) {\n                    error_str = text.non_field_errors[0].replace(/[[\\]\"]/g, '');\n                } else {\n                    for (let key in text) {\n                        error_str += key + ': ' + text[key] + '<br/>';\n                    }\n                }\n            } else {\n                error_str = text.replace(/[[\\]\"]/g, '');\n                error_str = text.replace(/^['\"](.*)['\"]$/, '$1');\n            }\n        } else if (resp.status === 404) {\n            error_str = 'The resource you are looking for does not exist.';\n        }\n        return error_str;\n    },\n    escapeHtml: function (htmlStr) {\n        return htmlStr\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    },\n    formatErrorV2: function (errors) {\n        if (typeof errors === 'string') {\n            return errors;\n        }\n        if (Array.isArray(errors)) {\n            if (1 == errors.length) {\n                return errors[0];\n            } else {\n                let errors_str = '';\n                for (let i = 0; i < errors.length; i++) {\n                    errors_str += errors[i] + '<br/>';\n                }\n                return errors_str;\n            }\n        }\n        if (typeof errors === 'object') {\n            if (1 == Object.keys(errors).length) {\n                return Object.values(errors)[0];\n            } else {\n                let errors_str = '<ul class=\"list-group text-start\">';\n                for (const key of Object.keys(errors)) {\n                    errors_str += `<li class=\"list-group-item\"><span class=\"fw-bold\">${key}:</span> ${module.exports.escapeHtml(\n                        errors[key]\n                    )}</li>`;\n                }\n                return errors_str + '</ul>';\n            }\n        }\n    },\n    goBack: function (vm) {\n        vm.$router.go(window.history.back());\n    },\n    copyObject: function (obj) {\n        return JSON.parse(JSON.stringify(obj));\n    },\n    getCookie: function (name) {\n        var value = null;\n        if (document.cookie && document.cookie !== '') {\n            let cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                let cookie = cookies[i].trim();\n                if (\n                    cookie.substring(0, name.length + 1).trim() ===\n                    name + '='\n                ) {\n                    value = decodeURIComponent(\n                        cookie.substring(name.length + 1)\n                    );\n                    break;\n                }\n            }\n        }\n        return value;\n    },\n    namePopover: function ($, vmDataTable) {\n        vmDataTable.on('mouseover', '.name_popover', function () {\n            $(this).popover('show');\n            $(this).on('mouseout', function () {\n                $(this).popover('hide');\n            });\n        });\n    },\n    add_endpoint_json: function (string, addition) {\n        let res = string.split('.json');\n        let endpoint = res[0] + '/' + addition + '.json';\n        endpoint = endpoint.replace('//', '/'); // Remove duplicated '/' just in case\n        return endpoint;\n    },\n    add_endpoint_join: function (api_string, addition) {\n        // assumes api_string has trailing forward slash '/' character required for POST\n        let endpoint = api_string + addition;\n        endpoint = endpoint.replace('//', '/'); // Remove duplicated '/' just in case\n        // if the last character is not a forward slash then add one\n        if (endpoint.slice(-1) != '/') {\n            endpoint += '/';\n        }\n        return endpoint;\n    },\n    dtPopover: function (value, truncate_length = 30, trigger = 'hover') {\n        var ellipsis = '...',\n            truncated = _.truncate(value, {\n                // eslint-disable-line no-undef\n                length: truncate_length,\n                omission: ellipsis,\n                separator: ' ',\n            }),\n            result = '<span>' + truncated + '</span>',\n            popTemplate = _.template(\n                '<a href=\"#\" ' + // eslint-disable-line no-undef\n                    'role=\"button\" ' +\n                    'data-toggle=\"popover\" ' +\n                    'data-trigger=\"' +\n                    trigger +\n                    '\" ' +\n                    'data-placement=\"top auto\"' +\n                    'data-html=\"true\" ' +\n                    'data-content=\"<%= text %>\" ' +\n                    '>more</a>'\n            );\n        if (_.endsWith(truncated, ellipsis)) {\n            // eslint-disable-line no-undef\n            result += popTemplate({\n                text: value,\n            });\n        }\n        return result;\n    },\n    dtPopoverCellFn: function (cell) {\n        $(cell)\n            .find('[data-toggle=\"popover\"]')\n            .popover()\n            .on('click', function (e) {\n                e.preventDefault();\n                return true;\n            });\n    },\n    processError: async function (err) {\n        console.log(err);\n        let errorText = '';\n        if (err.body.non_field_errors) {\n            console.log('non_field_errors');\n            // When non field errors raised\n            for (let i = 0; i < err.body.non_field_errors.length; i++) {\n                errorText += err.body.non_field_errors[i] + '<br />';\n            }\n        } else if (Array.isArray(err.body)) {\n            console.log('isArray');\n            // When serializers.ValidationError raised\n            for (let i = 0; i < err.body.length; i++) {\n                errorText += err.body[i] + '<br />';\n            }\n        } else {\n            console.log('else');\n            // When field errors raised\n            for (let field_name in err.body) {\n                if (\n                    Object.prototype.hasOwnProperty.call(err.body, field_name)\n                ) {\n                    errorText += field_name + ':<br />';\n                    for (let j = 0; j < err.body[field_name].length; j++) {\n                        errorText += err.body[field_name][j] + '<br />';\n                    }\n                }\n            }\n        }\n        await swal('Error', errorText, 'error'); // eslint-disable-line no-undef\n    },\n    post_and_redirect: function (url, postData) {\n        /* http.post and ajax do not allow redirect from Django View (post method),\n           this function allows redirect by mimicking a form submit.\n\n           usage:  vm.post_and_redirect(vm.application_fee_url, {'csrfmiddlewaretoken' : vm.csrf_token});\n        */\n        var postFormStr = '<form method=\"POST\" action=\"' + url + '\">';\n\n        for (let key in postData) {\n            if (Object.prototype.hasOwnProperty.call(postData, key)) {\n                postFormStr +=\n                    '<input type=\"hidden\" name=\"' +\n                    key +\n                    '\" value=\"' +\n                    postData[key] +\n                    '\">';\n            }\n        }\n        postFormStr += '</form>';\n        let formElement = $(postFormStr);\n        $('body').append(formElement);\n        $(formElement).submit();\n    },\n    enablePopovers: function () {\n        let popoverTriggerList = [].slice.call(\n            document.querySelectorAll('[data-bs-toggle=\"popover\"]')\n        );\n        popoverTriggerList.map(function (popoverTriggerEl) {\n            new bootstrap.Popover(popoverTriggerEl); // eslint-disable-line no-undef\n        });\n    },\n    parseFetchError: async function (response) {\n        let errorString = '';\n        let resData = '';\n        try {\n            resData = await response.json();\n        } catch (error) {\n            console.error(error);\n            resData = response;\n        }\n        console.log(resData);\n        if (Array.isArray(resData)) {\n            for (let i = 0; i < resData.length; i++) {\n                errorString += resData[i] + '<br>';\n            }\n        } else {\n            // Stringify obj\n            errorString = JSON.stringify(resData);\n        }\n        console.log(errorString);\n        return errorString;\n    },\n    getErrorStringFromResponseData(data) {\n        let errorString = '';\n        if (Array.isArray(data)) {\n            for (let i = 0; i < data.length; i++) {\n                errorString += data[i] + '<br>';\n            }\n        } else {\n            errorString = JSON.stringify(data);\n        }\n        return errorString;\n    },\n    getFileIconClass: function (filepath, additional_class_names = []) {\n        let ext = filepath.split('.').pop().toLowerCase();\n        let classname = additional_class_names;\n\n        if (['png', 'jpg', 'jpeg', 'bmp', 'tiff', 'tif'].includes(ext)) {\n            classname.push('bi-file-image-fill');\n        } else if (['pdf'].includes(ext)) {\n            classname.push('bi-file-pdf-fill');\n        } else if (['doc', 'docx'].includes(ext)) {\n            classname.push('bi-file-word-fill');\n        } else if (['xls', 'xlsx'].includes(ext)) {\n            classname.push('bi-file-excel-fill');\n        } else if (['txt', 'text'].includes(ext)) {\n            classname.push('bi-file-text-fill');\n        } else if (['rtf'].includes(ext)) {\n            classname.push('bi-file-richtext-fill');\n        } else if (['mp3', 'mp4'].includes(ext)) {\n            classname.push('bi-file-play-fill');\n        } else {\n            classname.push('bi-file_fill');\n        }\n\n        return classname.join(' ');\n    },\n    formatABN: function (abn) {\n        if (abn.length == 11) {\n            return (\n                abn.slice(0, 2) +\n                ' ' +\n                abn.slice(2, 5) +\n                ' ' +\n                abn.slice(5, 8) +\n                ' ' +\n                abn.slice(8, 11)\n            );\n        } else {\n            return abn;\n        }\n    },\n    formatACN: function (acn) {\n        if (acn.length == 9) {\n            return (\n                acn.slice(0, 3) + ' ' + acn.slice(3, 6) + ' ' + acn.slice(6, 9)\n            );\n        } else {\n            return acn;\n        }\n    },\n    formatABNorACN: function (input) {\n        if (input.length == 11) {\n            return this.formatABN(input);\n        } else if (input.length == 9) {\n            return this.formatACN(input);\n        } else {\n            return input;\n        }\n    },\n    validateABN: function (abn) {\n        if (abn.length != 11) {\n            return false;\n        }\n        let sum = 0;\n        for (let i = 0; i < 11; i++) {\n            let weight = 11 - i;\n            sum += weight * abn[i];\n        }\n        return sum % 89 == 0;\n    },\n    validateACN: function (acn) {\n        if (acn.length != 9) {\n            return false;\n        }\n        let sum = 0;\n        for (let i = 0; i < 8; i++) {\n            let weight = 8 - i;\n            sum += weight * acn[i];\n        }\n        return sum % 89 == 0;\n    },\n    isValidABNorACN: function (input) {\n        if (input.length == 11) {\n            return this.validateABN(input);\n        } else if (input.length == 9) {\n            return this.validateACN(input);\n        } else {\n            return false;\n        }\n    },\n    formatDateForAPI: function (data, format = 'DD/MM/YYYY') {\n        return data ? moment(data).format(format) : ''; // eslint-disable-line no-undef\n    },\n    calendarYearsIncluded: function (start_date, end_date) {\n        const start = moment(start_date).year();\n        const end = moment(end_date).year();\n        return end - start + 1;\n    },\n    yearsInDateRange: function (start_date, end_date) {\n        // Returns the number of years between two dates, rounded up\n        const start = moment(start_date);\n        const end = moment(end_date);\n        return Math.ceil(end.diff(start, 'years', true));\n    },\n    datesOverlap: function (start_date1, end_date1, start_date2, end_date2) {\n        const start1 = moment(start_date1);\n        const end1 = moment(end_date1);\n        const start2 = moment(start_date2);\n        const end2 = moment(end_date2);\n        return (\n            (start1.isSameOrBefore(start2) && end1.isSameOrAfter(start2)) ||\n            (start1.isSameOrBefore(end2) && end1.isSameOrAfter(end2)) ||\n            (start1.isSameOrAfter(start2) && end1.isSameOrBefore(end2))\n        );\n    },\n    financialYearsIncluded: function (start_date, end_date) {\n        const financialYearsIncluded = [];\n        const calendarYearsIncluded = this.calendarYearsIncluded(\n            start_date,\n            end_date\n        );\n        const startDate = moment(start_date);\n        const endDate = moment(end_date);\n        const startYear = moment(start_date).year() - 1;\n        for (\n            let i = startYear;\n            i < startYear + calendarYearsIncluded + 1;\n            i++\n        ) {\n            const startOfFinancialYear = moment(`${i}-07-01`);\n            const endOfFinancialYear = moment(`${i + 1}-06-30`);\n            if (\n                this.datesOverlap(\n                    startDate,\n                    endDate,\n                    startOfFinancialYear,\n                    endOfFinancialYear\n                )\n            ) {\n                financialYearsIncluded.push(`${i}-${i + 1}`);\n            }\n        }\n        return financialYearsIncluded;\n    },\n    calendarYearHasPassed: function (year) {\n        return new Date().year() > year;\n    },\n    financialYearHasPassed: function (financialYear) {\n        const endOfFinancialYear = new Date(\n            `${financialYear.split('-')[1]}-06-30`\n        );\n        return new Date() > endOfFinancialYear;\n    },\n    sequentialYearHasPassed: function (startDate, year) {\n        return moment(year).diff('years', moment(startDate).year()) > year;\n    },\n    getFinancialQuarterFromDate: function (date) {\n        const month = moment(date).month();\n        if (month < 3) {\n            return 3;\n        } else if (month < 6) {\n            return 4;\n        } else if (month < 9) {\n            return 1;\n        } else {\n            return 2;\n        }\n    },\n    getEndMonthForFinancialQuarter: function (financialQuarter) {\n        return [8, 11, 2, 5][financialQuarter - 1];\n    },\n    financialQuarterHasPassed: function (financialYear, financialQuarter) {\n        const month = this.getEndMonthForFinancialQuarter(financialQuarter);\n        const year =\n            financialQuarter > 2\n                ? financialYear.split('-')[1]\n                : financialYear.split('-')[0];\n        const endOfFinancialQuarter = new Date(year, month + 1, 0);\n        return new Date() > endOfFinancialQuarter;\n    },\n    getStartMonthForFinancialQuarter: function (financialQuarter) {\n        return [6, 9, 0, 3][financialQuarter - 1];\n    },\n    getFinancialYearFromDate: function (date) {\n        const month = moment(date).month();\n        const year = moment(date).year();\n        if (month < 7) {\n            return `${year - 1}-${year}`;\n        } else {\n            return `${year}-${year + 1}`;\n        }\n    },\n    getFinancialQuarterLabel: function (quarter) {\n        return ['JUL-SEP', 'OCT-DEC', 'JAN-MAR', 'APR-JUN'][quarter - 1];\n    },\n    getFinancialMonths: function (financialYear) {\n        return [\n            { year: financialYear.split('-')[0], month: 7, label: 'JUL' },\n            { year: financialYear.split('-')[0], month: 8, label: 'AUG' },\n            { year: financialYear.split('-')[0], month: 9, label: 'SEP' },\n            { year: financialYear.split('-')[0], month: 10, label: 'OCT' },\n            { year: financialYear.split('-')[0], month: 11, label: 'NOV' },\n            { year: financialYear.split('-')[0], month: 12, label: 'DEC' },\n            { year: financialYear.split('-')[1], month: 1, label: 'JAN' },\n            { year: financialYear.split('-')[1], month: 2, label: 'FEB' },\n            { year: financialYear.split('-')[1], month: 3, label: 'MAR' },\n            { year: financialYear.split('-')[1], month: 4, label: 'APR' },\n            { year: financialYear.split('-')[1], month: 5, label: 'MAY' },\n            { year: financialYear.split('-')[1], month: 6, label: 'JUN' },\n        ];\n    },\n    financialQuarterIncluded: function (\n        startDate,\n        endDate,\n        financialYear,\n        financialQuarter\n    ) {\n        let calendarYearApplicable = financialYear.split('-')[0];\n        if (financialQuarter > 2) {\n            calendarYearApplicable = financialYear.split('-')[1];\n        }\n        const financialQuarterStartMonth =\n            this.getStartMonthForFinancialQuarter(financialQuarter);\n        const financialQuarterEndMonth =\n            this.getEndMonthForFinancialQuarter(financialQuarter);\n        const startOfFinancialQuarter = moment().set({\n            year: calendarYearApplicable,\n            month: financialQuarterStartMonth,\n            date: 1,\n        });\n        const endOfFinancialQuarter = moment()\n            .set({\n                year: calendarYearApplicable,\n                month: financialQuarterEndMonth,\n                date: 1,\n            })\n            .endOf('month')\n            .set({\n                hour: 0,\n                minute: 0,\n                second: 0,\n                millisecond: 0,\n            });\n\n        return this.datesOverlap(\n            startDate,\n            endDate,\n            startOfFinancialQuarter,\n            endOfFinancialQuarter\n        );\n    },\n    ordinalSuffixOf: function (i) {\n        var j = i % 10,\n            k = i % 100;\n        if (j == 1 && k != 11) {\n            return i + 'st';\n        }\n        if (j == 2 && k != 12) {\n            return i + 'nd';\n        }\n        if (j == 3 && k != 13) {\n            return i + 'rd';\n        }\n        return i + 'th';\n    },\n    yearsElapsedSinceStartDate: function (date) {\n        return moment().diff(moment(date), 'years');\n    },\n    /**\n     * Function-parsable tagged template\n     * @param {Array} strings Array of backtick (``) template literals / strings with a length equal to the number of substitutions (${}) plus one.\n     * @param  {...any} keys Substitution (${}) keys in the template.\n     * @returns A string with the substitutions applied.\n     * @example const myTemplate = template`Hello ${'name'}, how are you?`;\n     * myTemplate({ name: 'John' }); // Hello John, how are you?\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\n     */\n    template: function (strings, ...keys) {\n        return (...values) => {\n            const dict = values[values.length - 1] || {};\n            const result = [strings[0]];\n            keys.forEach((key, i) => {\n                const value = Number.isInteger(key) ? values[key] : dict[key];\n                result.push(value, strings[i + 1]);\n            });\n            return result.join('');\n        };\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///325\n")}},__webpack_module_cache__={};function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var C=__webpack_module_cache__[g]={id:g,loaded:!1,exports:{}};return __webpack_modules__[g].call(C.exports,C,C.exports,__webpack_require__),C.loaded=!0,C.exports}__webpack_require__.m=__webpack_modules__,function(){var g=[];__webpack_require__.O=function(I,C,n,A){if(!C){var e=1/0;for(i=0;i<g.length;i++){C=g[i][0],n=g[i][1],A=g[i][2];for(var t=!0,c=0;c<C.length;c++)(!1&A||e>=A)&&Object.keys(__webpack_require__.O).every((function(g){return __webpack_require__.O[g](C[c])}))?C.splice(c--,1):(t=!1,A<e&&(e=A));if(t){g.splice(i--,1);var l=n();void 0!==l&&(I=l)}}return I}A=A||0;for(var i=g.length;i>0&&g[i-1][2]>A;i--)g[i]=g[i-1];g[i]=[C,n,A]}}(),function(){__webpack_require__.n=function(g){var I=g&&g.__esModule?function(){return g["default"]}:function(){return g};return __webpack_require__.d(I,{a:I}),I}}(),function(){__webpack_require__.d=function(g,I){for(var C in I)__webpack_require__.o(I,C)&&!__webpack_require__.o(g,C)&&Object.defineProperty(g,C,{enumerable:!0,get:I[C]})}}(),function(){__webpack_require__.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(g){if("object"===typeof window)return window}}()}(),function(){__webpack_require__.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)}}(),function(){__webpack_require__.r=function(g){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})}}(),function(){__webpack_require__.nmd=function(g){return g.paths=[],g.children||(g.children=[]),g}}(),function(){var g={143:0};__webpack_require__.O.j=function(I){return 0===g[I]};var I=function(I,C){var n,A,e=C[0],t=C[1],c=C[2],l=0;if(e.some((function(I){return 0!==g[I]}))){for(n in t)__webpack_require__.o(t,n)&&(__webpack_require__.m[n]=t[n]);if(c)var i=c(__webpack_require__)}for(I&&I(C);l<e.length;l++)A=e[l],__webpack_require__.o(g,A)&&g[A]&&g[A][0](),g[A]=0;return __webpack_require__.O(i)},C=self["webpackChunkpbsv2"]=self["webpackChunkpbsv2"]||[];C.forEach(I.bind(null,0)),C.push=I.bind(null,C.push.bind(C))}();var __webpack_exports__=__webpack_require__.O(void 0,[998],(function(){return __webpack_require__(756)}));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();